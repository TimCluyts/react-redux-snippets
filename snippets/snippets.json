{
	"React:Memo": {
		"prefix": "memo",
		"body": [
			"import { memo } from 'react';",
			"",
			"const ${1:${TM_FILENAME_BASE}} = memo((props) => {",
			"\treturn $0",
			"});",
			"export default ${1:${TM_FILENAME_BASE}};"
		],
		"description": "React memo component"
	},
	"React:Memo:PropsEqual": {
		"prefix": "memop",
		"body": [
			"import { memo } from 'react';",
			"",
			"const ${1:${TM_FILENAME_BASE}} = memo((props) => {",
			"\treturn $0",
			"}, ${2:arePropsEqualFunction});",
			"export default ${1:${TM_FILENAME_BASE}};"
		],
		"description": "React memo component including arePropsEqual"
	},
	"React:Component": {
		"prefix": [
			"comp",
			"rc"
		],
		"body": [
			"import react from 'react';",
			"",
			"function ${1:${TM_FILENAME_BASE}}(props) {",
			"\treturn $0",
			"};",
			"export default ${1:${TM_FILENAME_BASE}};"
		],
		"description": "React component"
	},
	"Global:Import:Module": {
		"prefix": [
			"imp",
			"import"
		],
		"body": [
			"import ${1:name} from '${2:module}';$0"
		],
		"description": "Import default module"
	},
	"Global:Import:Alias": {
		"prefix": [
			"imp",
			"impa",
			"import"
		],
		"body": [
			"import { ${1:original} as ${2:alias} }  from '${3:module}';$0"
		],
		"description": "Import module as alias"
	},
	"Global:For:Of": {
		"prefix": [
			"forof",
			"fof"
		],
		"body": [
			"for(let ${1:item} of ${2:object}) {",
			"\t$0",
			"}"
		],
		"description": "Loop over object keys"
	},
	"Global:For:In": {
		"prefix": [
			"forin",
			"fin"
		],
		"body": [
			"for(let ${1:item} in ${2:object}) {",
			"\t$0",
			"}"
		],
		"description": "Loop over object values"
	},
	"Global:ForEach": {
		"prefix": [
			"foreach",
			"feach"
		],
		"body": [
			"${1:array}.forEach((${2:item(s)}) => {",
			"\t$0",
			"});"
		],
		"description": "Foreach loop over array"
	},
	"Global:Map": {
		"prefix": [
			"map"
		],
		"body": [
			"${1:array}.map((${2:item(s)}) => {",
			"\treturn $0",
			"});"
		],
		"description": "Map array loop"
	},
	"Jest:Test": {
		"prefix": [
			"test",
			"tna"
		],
		"body": [
			"test(`$1`, () => {",
			"\t//Arrange",
			"$0",
			"\t//Act",
			"",
			"\t//Assert",
			"",
			"});"
		],
		"description": "Default test implementation of Jest"
	},
	"Jest:Test:Async": {
		"prefix": [
			"test",
			"ta"
		],
		"body": [
			"test(`$1`, async () => {",
			"\t//Arrange",
			"$0",
			"\t//Act",
			"",
			"\t//Assert",
			"",
			"});"
		],
		"description": "Default async test implementation of Jest"
	},
	"Jest:It": {
		"prefix": [
			"it"
		],
		"body": [
			"it(`should $1`, () => {",
			"\t//Arrange",
			"$0",
			"\t//Act",
			"",
			"\t//Assert",
			"",
			"});"
		],
		"description": "Default it implementation of Jest"
	},
	"Jest:It:Async": {
		"prefix": [
			"ita"
		],
		"body": [
			"it(`should $1`, () => {",
			"\t//Arrange",
			"$0",
			"\t//Act",
			"",
			"\t//Assert",
			"",
			"});"
		],
		"description": "Default async it implementation of Jest"
	},
	"Jest:Describe": {
		"prefix": [
			"desc",
			"describe"
		],
		"body": [
			"describe(`$1`, () => {",
			"\t$0",
			"});"
		],
		"description": "Describe test suite"
	}
}